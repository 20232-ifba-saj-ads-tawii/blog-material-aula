import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as t,c as d,a as e,b as a,d as i,e as n}from"./app-ef7d128e.js";const u={},c=n('<h1 id="virtualizacao" tabindex="-1"><a class="header-anchor" href="#virtualizacao" aria-hidden="true">#</a> Virtualização</h1><p><sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><h2 id="execucao-de-aplicativos-em-um-sistema-operacional" tabindex="-1"><a class="header-anchor" href="#execucao-de-aplicativos-em-um-sistema-operacional" aria-hidden="true">#</a> Execução de Aplicativos em um Sistema Operacional</h2><p>Para entender como um aplicativo é executado em um sistema operacional, primeiro é necessário entender como um sistema operacional funciona. Um sistema operacional é responsável por gerenciar os recursos de um computador, como memória, processador e dispositivos de entrada e saída. Ele é o intermediário entre o hardware do computador e os programas que são executados nele.</p><p>Quando um aplicativo é executado em um sistema operacional, ele é carregado na memória do computador. O sistema operacional aloca um espaço de memória para o aplicativo e carrega o código executável do aplicativo naquele espaço de memória. Em seguida, o sistema operacional executa o código do aplicativo, instrução por instrução, até que o aplicativo seja concluído ou o usuário o encerre.</p><p>Durante a execução do aplicativo, ele pode precisar acessar outros recursos do computador, como arquivos em disco ou dispositivos de rede. O sistema operacional fornece uma interface para o aplicativo acessar esses recursos de forma segura e controlada.</p><h2 id="execucao-de-aplicativos-em-um-ambiente-virtualizado" tabindex="-1"><a class="header-anchor" href="#execucao-de-aplicativos-em-um-ambiente-virtualizado" aria-hidden="true">#</a> Execução de Aplicativos em um Ambiente Virtualizado</h2><p>Em um ambiente virtualizado, um aplicativo é executado em um ambiente isolado que é separado do sistema operacional hospedeiro. Isso permite que o aplicativo seja executado em um ambiente que é configurado de maneira específica para o aplicativo, sem afetar o sistema operacional hospedeiro ou outros aplicativos que estão sendo executados nele.</p><p>Um ambiente virtualizado é criado usando um software de virtualização, que é instalado no sistema operacional hospedeiro. O software de virtualização cria um ambiente virtualizado que inclui seu próprio sistema operacional, que é instalado em uma imagem de disco virtual. Essa imagem de disco virtual contém todos os arquivos necessários para o sistema operacional, bem como para o aplicativo que será executado nele.</p><p>O aplicativo é instalado dentro do ambiente virtualizado e é executado dentro desse ambiente. O aplicativo só tem acesso aos recursos que foram alocados para ele dentro do ambiente virtualizado. Isso inclui recursos como memória, processador e dispositivos de entrada e saída. Qualquer tentativa do aplicativo de acessar recursos fora do ambiente virtualizado é bloqueada pelo software de virtualização.</p><h2 id="tipos-de-virtualizacao" tabindex="-1"><a class="header-anchor" href="#tipos-de-virtualizacao" aria-hidden="true">#</a> Tipos de Virtualização</h2><p>Existem vários tipos de virtualização, cada um projetado para um conjunto específico de casos de uso. Os três principais tipos de virtualização são:</p><h3 id="virtualizacao-de-servidor" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-servidor" aria-hidden="true">#</a> Virtualização de Servidor</h3><p>A virtualização de servidor é usada para criar vários servidores virtuais em um único servidor físico. Cada servidor virtual é isolado dos outros servidores virtuais e pode ter seu próprio sistema operacional, aplicativos e recursos de hardware. Isso permite que várias instâncias de um aplicativo sejam executadas em um único servidor, o que pode ajudar a reduzir os custos de hardware e melhorar a utilização dos recursos do servidor.</p><h3 id="virtualizacao-de-desktop" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-desktop" aria-hidden="true">#</a> Virtualização de Desktop</h3><p>A virtualização de desktop é usada para criar desktops virtuais que podem ser acessados ​​por usuários de qualquer lugar. Cada desktop virtual é um ambiente virtualizado que inclui um sistema operacional e os aplicativos necessários para o usuário. Os usuários podem acessar seus desktops virtuais usando um cliente remoto, como um navegador da web ou um aplicativo de desktop remoto.</p><h3 id="virtualizacao-de-aplicativo" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-aplicativo" aria-hidden="true">#</a> Virtualização de Aplicativo</h3><p>A virtualização de aplicativo é usada para criar um ambiente isolado para a execução de um único aplicativo. O aplicativo é executado em um ambiente virtualizado, separado do sistema operacional hospedeiro, o que garante que o aplicativo não afete outros aplicativos ou o sistema operacional. Isso pode ser útil para testar aplicativos ou para executar aplicativos que têm requisitos de sistema específicos.</p><h3 id="virtualizacao-de-armazenamento" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-armazenamento" aria-hidden="true">#</a> Virtualização de armazenamento</h3><p>A virtualização de armazenamento é usada para criar um pool de armazenamento de vários dispositivos de armazenamento físico. O objetivo é fornecer aos usuários um único ponto de acesso para todo o armazenamento disponível. Isso pode ser útil em grandes empresas ou organizações que possuem grandes quantidades de dados.</p><p>A virtualização de armazenamento é frequentemente usada em conjunto com a virtualização de servidor. Isso permite que os administradores de TI gerenciem o armazenamento de dados de vários servidores em um único local. Isso pode melhorar a eficiência, facilitando o gerenciamento de dados em vários servidores físicos.</p><h3 id="virtualizacao-de-rede" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-rede" aria-hidden="true">#</a> Virtualização de rede</h3><p>A virtualização de rede é usada para criar redes virtuais em um único hardware de rede físico. Isso permite que vários sistemas operacionais e aplicativos compartilhem a mesma rede física. Cada rede virtual tem seu próprio conjunto de endereços IP e é isolada das outras redes virtuais. Isso pode ser útil em grandes organizações que precisam separar diferentes departamentos ou equipes em redes isoladas.</p><p>A virtualização de rede também pode ser usada para criar ambientes de teste isolados. Isso permite que os desenvolvedores testem aplicativos em uma rede isolada sem afetar a rede de produção.</p><h3 id="virtualizacao-de-recursos" tabindex="-1"><a class="header-anchor" href="#virtualizacao-de-recursos" aria-hidden="true">#</a> Virtualização de recursos</h3><p>A virtualização de recursos é usada para criar pools de recursos físicos, como CPU, RAM e armazenamento, que podem ser alocados dinamicamente para diferentes aplicativos e sistemas operacionais. Isso pode ajudar a melhorar a eficiência de um sistema, permitindo que os recursos sejam compartilhados entre diferentes aplicativos e sistemas operacionais. Por exemplo, um servidor virtual pode ser configurado para compartilhar recursos de CPU e RAM entre vários sistemas operacionais.</p><p>A virtualização de recursos também pode ser usada para criar ambientes de teste isolados. Isso permite que os desenvolvedores testem aplicativos em um ambiente isolado sem afetar o ambiente de produção.</p><h2 id="maquina-virtual" tabindex="-1"><a class="header-anchor" href="#maquina-virtual" aria-hidden="true">#</a> Máquina virtual</h2><p>Uma máquina virtual é um ambiente de computação que é criado por meio de software em um sistema operacional host. Ele é projetado para emular um sistema operacional completo e permitir que os usuários executem aplicativos e processos em um ambiente virtualizado.</p><p>Uma máquina virtual é criada a partir de uma imagem de disco que contém um sistema operacional e aplicativos pré-instalados. Essa imagem de disco é então executada dentro de um software de virtualização, que permite que a máquina virtual seja executada em um ambiente isolado e protegido do sistema operacional host.</p><p>Uma das principais vantagens das máquinas virtuais é que elas permitem que os usuários executem aplicativos em um ambiente isolado, sem afetar o sistema operacional host. Isso pode ser útil para testar novos aplicativos ou sistemas operacionais, ou para isolar aplicativos que podem apresentar riscos de segurança.</p><p>As máquinas virtuais também são úteis para desenvolvedores de software, pois permitem que eles criem um ambiente de desenvolvimento isolado que é compatível com as necessidades do projeto. Além disso, as máquinas virtuais podem ser facilmente clonadas e distribuídas para outras máquinas, permitindo que os usuários compartilhem ambientes de desenvolvimento ou teste.</p><p>Existem vários softwares de virtualização disponíveis, incluindo o VirtualBox, VMware e Hyper-V da Microsoft. Esses softwares permitem que os usuários criem e gerenciem máquinas virtuais em seus sistemas operacionais host.</p><p>No entanto, a virtualização também tem algumas desvantagens. As máquinas virtuais geralmente requerem mais recursos do sistema, como RAM e CPU, do que a execução de aplicativos diretamente no sistema operacional host. Além disso, a virtualização pode reduzir o desempenho do sistema operacional host, especialmente se várias máquinas virtuais estiverem sendo executadas ao mesmo tempo.</p><h2 id="windows-subsystem-for-linux-wsl" tabindex="-1"><a class="header-anchor" href="#windows-subsystem-for-linux-wsl" aria-hidden="true">#</a> Windows Subsystem for Linux (WSL)</h2><p><sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><p>O Windows Subsystem for Linux (WSL) é uma plataforma de virtualização de sistema operacional que permite aos usuários do Windows executar distribuições Linux em um ambiente virtualizado. Ele foi introduzido pela Microsoft como uma forma de fornecer aos desenvolvedores do Windows um ambiente de linha de comando mais amigável para o desenvolvimento de aplicativos baseados em Linux.</p><p>O WSL não é uma máquina virtual tradicional, mas sim um subsistema dentro do Windows que fornece uma camada de compatibilidade com o Linux. Ele usa a tecnologia de virtualização de recursos do Windows, como o Hyper-V, para criar um ambiente virtualizado que é executado em segundo plano. Isso permite que os usuários do Windows executem aplicativos baseados em Linux sem precisar instalar um sistema operacional Linux completo em uma máquina virtual.</p><p>O WSL oferece duas opções de distribuição Linux - o WSL1 e o WSL2. O WSL1 usa uma camada de compatibilidade para emular o kernel Linux no Windows, enquanto o WSL2 usa a tecnologia de virtualização Hyper-V para executar um kernel Linux real em uma máquina virtual leve. Isso torna o WSL2 mais rápido e mais eficiente em termos de recursos do que o WSL1, mas também pode exigir mais configuração inicial e compatibilidade com o hardware.</p><p>Uma das principais vantagens do WSL é que ele permite que os desenvolvedores do Windows usem ferramentas baseadas em Linux sem precisar alternar para um sistema operacional Linux separado. Isso pode melhorar significativamente a eficiência e a produtividade dos desenvolvedores, permitindo que eles trabalhem em um ambiente de linha de comando mais familiar e compatível com as ferramentas de desenvolvimento Linux.</p><p>No entanto, o WSL pode ter algumas limitações em relação a uma máquina virtual tradicional, como a falta de suporte para algumas funções de rede avançadas e a necessidade de usar uma distribuição Linux compatível com o WSL. Além disso, o WSL pode não ser a melhor opção para usuários que precisam de um ambiente de desenvolvimento Linux completo com recursos avançados de virtualização.</p><h2 id="containers" tabindex="-1"><a class="header-anchor" href="#containers" aria-hidden="true">#</a> Containers</h2><p>Os containers proporcionam uma maneira padrão de empacotar código, configurações e dependências de seu aplicativo em um único objeto. Eles compartilham um sistema operacional instalado no servidor e são executados como processos isolados de recursos. Isso permite fazer implantações rápidas, confiáveis e consistentes, independentemente do ambiente. A Nuvem AWS oferece recursos de infraestrutura otimizados para a execução de containers, além de um conjunto de serviços de orquestração que facilitam a criação e execução de aplicativos conteinerizados em produção.</p><h3 id="qual-a-diferenca-entre-conteineres-e-maquinas-virtuais" tabindex="-1"><a class="header-anchor" href="#qual-a-diferenca-entre-conteineres-e-maquinas-virtuais" aria-hidden="true">#</a> Qual a diferença entre contêineres e máquinas virtuais?</h3><p>Contêineres e máquinas virtuais são tecnologias que tornam as aplicações independentes de seus recursos de infraestrutura de TI. Um contêiner é um pacote de código de software que contém o código de uma aplicação, suas bibliotecas e outras dependências. A conteinerização torna suas aplicações portáteis, para que o mesmo código possa ser executado em qualquer dispositivo. Uma máquina virtual é uma cópia digital de uma máquina física. Você pode ter várias máquinas virtuais com seus próprios sistemas operacionais individuais em execução no mesmo sistema operacional host. Além disso, você pode criar uma máquina virtual que contém tudo o que é necessário para executar sua aplicação.</p><h2 id="resumo-das-diferencas-conteiner-e-maquina-virtual" tabindex="-1"><a class="header-anchor" href="#resumo-das-diferencas-conteiner-e-maquina-virtual" aria-hidden="true">#</a> Resumo das diferenças: Contêiner e Máquina Virtual</h2><figure><img src="https://www.plantuml.com/plantuml/svg/ZLJBZjCm55qtNs5b1LAdIjAcNKH5CqA8Ba0i4CoYLCYfRnCBrmwsCvs7vcjOy27pOrmxJeX4Ax6vhSyvz-5xh5mRIxLjZo9YlDAqgSbxyXHD3afQIO-mZZSWxi3oFPtUQ4x5r51fhWneVeYZoQHBsU8_2ITDvG-o9bQtC7M8Oc2WGIHrHyTsnsIMEK3TWHQq6MMOHd091f435SP1kyYNyHtsIYXjzZNWM0ghLM1M21_uFJ337s6KvkSFMBPmG0sygcq_YwbfuxXItVkZVH1uLQrQoO1D3rm8OB5ZJfpP6eNpMUw70LPrmr2jrQa6of2KIlgc7WjTardk845B4Fqo4Ow_bAsqRLTx62aPXd2IhltKW7NRy1Eyob_7hZyXqSIqPRVrlMYD1VqzSOQ5EtIvHR-jjN0jAWqFHJ24R3lYL7CBkm8h4aAJ0Aw8dtSTVwG_MoxfDxbHfW46NDEu5wT1lEp5dsUVPWER1JOVs5k2NRzoV6HKy4Vwyllbbnhayo1VzFBDBO5ZAoZxgra4pNpSS5Hn9Cs3DEkb7tXf1dOPsBHdRvh6aUZSabozmNGV5pxEVSnyJ7rCoBPRCfTttEnwTvrbOL_zK37MV8xEM9LwgqO-XEUC3e4qArUp_5ypK7hH2kJ-CU8jlaAA3qgJTxB2tw2xk3BaBYziVFcXS7TjGfx2Xy3WcozmRmKfa-8CaIAHdYCo9B9pH8v4ZiHpT0sIuLVh3m00" alt="uml diagram" loading="lazy"><figcaption>Comparativo entre virtualização de uma aplicação utilizando Máquina Virtual e Container</figcaption></figure><table><thead><tr><th>Características</th><th>Contêiner</th><th>Máquina virtual</th></tr></thead><tbody><tr><td>Definição</td><td>Um pacote de código de software que contém o código de um aplicativo, suas bibliotecas e outras dependências que fazem o ambiente de execução da aplicação.</td><td>Réplica digital de uma máquina física. Particiona o hardware físico em vários ambientes.</td></tr><tr><td>Virtualização</td><td>Virtualiza parte do sistema operacional.</td><td>Virtualiza a estrutura física subjacente.</td></tr><tr><td>Encapsulamento</td><td>Camada de software sobre o sistema operacional necessária para executar a aplicação ou o componente da aplicação.</td><td>Sistema operacional, todas as camadas de software acima dele, várias aplicações.</td></tr><tr><td>Tecnologia</td><td>Mecanismo de contêiner coordena com o sistema operacional subjacente para obter recursos.</td><td>O hipervisor coordena com o hardware ou sistema operacional subjacente.</td></tr><tr><td>Tamanho</td><td>Mais leve (pense em termos de MB).</td><td>Muito maior (pense em termos de GB).</td></tr><tr><td>Controle</td><td>Menos controle do ambiente fora do contêiner.</td><td>Mais controle do ambiente inteiro.</td></tr><tr><td>Flexibilidade</td><td>Mais flexível. Você pode migrar rapidamente entre ambientes on-premises e centrados na nuvem.</td><td>Menos flexível. A migração tem desafios.</td></tr><tr><td>Escalabilidade</td><td>Altamente escalável. Escalabilidade granular possível com microsserviços.</td><td>Escalar pode ter custo elevado. É necessário alternar de instâncias on-premises para a nuvem para escalar com bom custo-benefício.</td></tr></tbody></table><h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias" aria-hidden="true">#</a> Referências</h2><hr class="footnotes-sep">',50),m={class:"footnotes"},l={class:"footnotes-list"},p={id:"footnote1",class:"footnote-item"},v={href:"https://aws.amazon.com/pt/what-is/virtualization/",target:"_blank",rel:"noopener noreferrer"},f=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),h={id:"footnote2",class:"footnote-item"},b={href:"https://aws.amazon.com/pt/compare/the-difference-between-containers-and-virtual-machines/",target:"_blank",rel:"noopener noreferrer"},q=e("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1),z={id:"footnote3",class:"footnote-item"},x={href:"https://aws.amazon.com/pt/containers/",target:"_blank",rel:"noopener noreferrer"},g=e("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1),w={id:"footnote4",class:"footnote-item"},_={href:"https://learn.microsoft.com/pt-br/windows/wsl/",target:"_blank",rel:"noopener noreferrer"},L=e("a",{href:"#footnote-ref4",class:"footnote-backref"},"↩︎",-1);function A(V,I){const o=r("ExternalLinkIcon");return t(),d("div",null,[c,e("section",m,[e("ol",l,[e("li",p,[e("p",null,[a("O que é virtualização? "),e("a",v,[a("https://aws.amazon.com/pt/what-is/virtualization/"),i(o)]),a(),f])]),e("li",h,[e("p",null,[a("Qual a diferença entre contêineres e máquinas virtuais? "),e("a",b,[a("https://aws.amazon.com/pt/compare/the-difference-between-containers-and-virtual-machines/"),i(o)]),a(),q])]),e("li",z,[e("p",null,[a("O que é um container? "),e("a",x,[a("https://aws.amazon.com/pt/containers/"),i(o)]),a(),g])]),e("li",w,[e("p",null,[a("Documentação do Subsistema Windows para Linux "),e("a",_,[a("https://learn.microsoft.com/pt-br/windows/wsl/"),i(o)]),a(),L])])])])])}const E=s(u,[["render",A],["__file","04_virtualizacao.html.vue"]]);export{E as default};
